<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Yanbin's Blog]]></title>
  <link href="http://zhaoyanbin.github.io/atom.xml" rel="self"/>
  <link href="http://zhaoyanbin.github.io/"/>
  <updated>2017-08-04T16:35:04+08:00</updated>
  <id>http://zhaoyanbin.github.io/</id>
  <author>
    <name><![CDATA[Yanbin Zhao]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Test]]></title>
    <link href="http://zhaoyanbin.github.io/blog/2017/08/04/test/"/>
    <updated>2017-08-04T16:30:15+08:00</updated>
    <id>http://zhaoyanbin.github.io/blog/2017/08/04/test</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Systemd服务使用说明]]></title>
    <link href="http://zhaoyanbin.github.io/blog/2016/07/21/systemdfu-wu-shi-yong-shuo-ming/"/>
    <updated>2016-07-21T10:48:24+08:00</updated>
    <id>http://zhaoyanbin.github.io/blog/2016/07/21/systemdfu-wu-shi-yong-shuo-ming</id>
    <content type="html"><![CDATA[<p>systemd服务使用说明</p>

<!--more-->


<h1>1.使用systemctl &ndash;user enable 命令启动服务</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>systemctl --user enable /your/service/path</span></code></pre></td></tr></table></div></figure>


<p>创建的服务在 ~/.config/</p>

<h1>2.服务控制</h1>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>systemctl --user start your.service    #启动服务
</span><span class='line'>systemctl --user status your.service   #查看服务状态
</span><span class='line'>systemctl --user stop your.service     #停止服务
</span><span class='line'>systemctl --user restart your.service  #重启服务</span></code></pre></td></tr></table></div></figure>


<h1>3.删除服务</h1>

<p>首先将服务停止，然后删除软链。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Uwsgi+django服务配置]]></title>
    <link href="http://zhaoyanbin.github.io/blog/2016/07/20/uwsgi-plus-djangofu-wu-pei-zhi/"/>
    <updated>2016-07-20T13:51:49+08:00</updated>
    <id>http://zhaoyanbin.github.io/blog/2016/07/20/uwsgi-plus-djangofu-wu-pei-zhi</id>
    <content type="html"><![CDATA[<p>uwsgi+django的服务配置和关键配置文件说明</p>

<!--more-->


<h1>1、django目录结构</h1>

<ul>
<li>Proejct_Name

<ul>
<li>djangosite

<ul>
<li>__init__.py</li>
<li>manage.py</li>
<li>settings.py</li>
<li>wsgi.py(<strong><em>uwsgi启动配置</em></strong>)</li>
<li>urls.py(<strong><em>import每个app的urls.py</em></strong>)</li>
<li>model.py(<strong><em>放置所有app共用model</em></strong>)</li>
<li>views.py(<strong><em>放置所有app共用view</em></strong>)</li>
<li>apps/

<ul>
<li>myapp1

<ul>
<li>model.py</li>
<li>views.py</li>
<li>urls.py</li>
<li>static/</li>
</ul>
</li>
<li>myapp2</li>
</ul>
</li>
<li>tests/(<strong><em>project级别的测试，针对每个app的测试还要有单独的测试代码</em></strong>)</li>
<li>static/

<ul>
<li>themes1/

<ul>
<li>css/</li>
<li>js/</li>
<li>images/</li>
</ul>
</li>
<li>themes2/

<ul>
<li>css</li>
<li>js/</li>
<li>images/</li>
</ul>
</li>
</ul>
</li>
<li>templates

<ul>
<li>base.html</li>
<li>home.html</li>
<li>myapp1

<ul>
<li>&hellip;</li>
</ul>
</li>
<li>myapp2

<ul>
<li>&hellip;</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>src(<strong><em>src代码库</em></strong>)

<ul>
<li>third_party(<strong><em>加载第三方模块，为了避免版本冲突，将使用的第三方库或者期望覆盖的库放到这里</em></strong>)

<ul>
<li>python*.*

<ul>
<li>site_packages</li>
</ul>
</li>
</ul>
</li>
<li>utils</li>
<li>tools

<ul>
<li>path_tools.py(<strong><em>这里将third_party的site_packages</em></strong>)</li>
</ul>
</li>
</ul>
</li>
<li>uwsgi_run

<ul>
<li>real_run_systemd</li>
<li>uwsgi.service</li>
</ul>
</li>
<li>uwsgi.xml</li>
</ul>
</li>
</ul>


<h1>2、settings.py文件的配置说明</h1>

<blockquote><p>1.在path_tools.py添加{third_party lib path}到sys_path</p></blockquote>

<pre><code>def _libs_path():
    libs_path = "../third_party/lib/python2.7/site-packages/"
    libs_path = os.path.abspath(os.path.join(os.path.dirname(__file__),libs_path))
    sys.path.insert(0, libs_path)
    return sys.path
LIBS_PATH = _libs_path()</code></pre>


<blockquote><p>2、添加third_party库的引用：</p></blockquote>

<pre><code>from Project_Name.src.tools.path_tools import LIBS_PATH as _</code></pre>


<blockquote><p>3、其它设置：</p></blockquote>

<pre><code>BASE_DIR = os.path.abspath(os.path.dirname(__file__))
ROOT_DIR = os.path.dirname(BASE_DIR)
SRC_DIR = os.path.join(ROOT_DIR, 'src')
RUN_DIR = os.path.join(SRC_DIR, 'run')
LOG_DIR = os.path.join(SRC_DIR, 'logs')
DB_DIR = os.path.join(SRC_DIR, 'logs')
DEBUG = True
TEMPLATE_DEBUG = DEBUG
......
# Absolute path to the directory static files should be collected to.
# Don't put anything in this directory yourself; store your static files
# in apps' "static/" subdirectories and in STATICFILES_DIRS.
# Example: "/home/media/media.lawrence.com/static/"
STATIC_ROOT = os.path.join(RUN_DIR, 'static')
# URL prefix for static files.
# Example: "http://media.lawrence.com/static/"
STATIC_URL = '/static/'
STATICFILES_DIRS = (
    # Put strings here, like "/home/html/static" or "C:/www/django/static".
    # Always use forward slashes, even on Windows.
    # Don't forget to use absolute paths, not relative paths."
    os.path.join(BASE_DIR, 'static'),
)</code></pre>


<h1>3、wsgi.py文件的配置说明</h1>

<pre><code>from Project_Name.src.tools.path_tools import LIBS_PATH as _ #加载第三方库路径
import os
import sys
from django.core.wsgi import get_wsgi_application
DJANGO_LATEST_PATH = '/opt/tiger/ss_lib/django-latest'
sys.path.insert(0, DJANGO_LATEST_PATH) #加载django路径
os.environ.setdefault("DJANGO_SETTINGS_MODULE", "Project_Name.djangosite.settings") ＃设置setting加载路径
application = get_wsgi_application()</code></pre>


<h1>4、systemd服务配置与启动</h1>

<blockquote><p>1、systemd启动脚本real_run_systemd</p></blockquote>

<pre><code>#! /bin/bash
ulimit -c 1000000
ulimit -n 50000
export DJANGO_SETTINGS_MODULE="djangosite.settings"
cd /your/path/to/Project #{Project_Name}
prog_name="{your prog name}"
echo "`date '+%Y-%m-%d %H:%M:%S'`  `hostname` : $prog_name start" >> /your/log/parent/dir/${prog_name}_svc.log
exec /your/uwsgi/service/location/uwsgi -x uwsgi.xml  1>/dev/null 2>>/your/error/log/dir/${prog_name}_err.log</code></pre>


<blockquote><p>2、systemd服务配置uwsgi.service</p></blockquote>

<pre><code>ExecStart=/your/online/real_run_systemd/dir/real_run_systemd
ExecReload=/bin/kill -s HUP $MAINPID
Restart=always
ExecStop=/bin/kill -s INT $MAINPID
KillMode=control-group
KillSignal=INT
[Install]
WantedBy=default.target</pre>


<p>关于关闭DEBUG模式和systemctl后续补充。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[First Blog]]></title>
    <link href="http://zhaoyanbin.github.io/blog/2016/07/13/first-blog/"/>
    <updated>2016-07-13T10:54:45+08:00</updated>
    <id>http://zhaoyanbin.github.io/blog/2016/07/13/first-blog</id>
    <content type="html"><![CDATA[<h1>github</h1>

<!--more-->


<h2>this is my first octopress blog</h2>
]]></content>
  </entry>
  
</feed>
